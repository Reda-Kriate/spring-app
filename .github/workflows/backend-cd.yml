name: CD - Deploy backend

on:
  workflow_dispatch:
  push:
    paths:
      - backend/**
    branches:
      - main
permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: redakriate
          POSTGRES_PASSWORD: redareda
          POSTGRES_DB: customer
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set Build Number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Build Package Push with maven
        run: mvn -ntp -B verify -Djib.to.image=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/spring-app:${{ steps.build-number.outputs.BUILD_NUMBER }} jib:build
      - name: l'envoie de notification
        run: |
          curl -X POST \
            -H 'Content-type: application/json' \
            --data "{\"text\":\"Image est crée avec succès.\"}" \
            "${{ secrets.SLACK_URL }}"
      - name: Mis a jour Dockerrun.aws.json
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(redakriate/spring-app:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.ACCESS_KEY }}
          aws_secret_key: ${{ secrets.SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_APP_NAME }}
          environment_name: ${{ secrets.AWS_ENV_NAME }}
          version_label: ${{steps.build-number.outputs.BUILD_NUMBER}}
          region: ${{ secrets.AWS_REGION}}
          deployment_package: backend/Dockerrun.aws.json
      - name: l'envoie de notification
        run: |
          curl -X POST \
            -H 'Content-type: application/json' \
            --data "{\"text\":\"Déploiement est terminé avec succés\"}" \
            "${{ secrets.SLACK_URL }}"
      - name: Commit and Push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{steps.build-number.outputs.BUILD_NUMBER}}"
          git push
      - name: l'envoie de notification
        if: always()
        run: |
          curl -X POST \
          -H 'Content-type: application/json' \
          --data "{\"text\":\"Workflow Statuts : ${{job.status}}\"}" \
          "${{ secrets.SLACK_URL }}"
